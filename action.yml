name: 'Create Resyntax Pull Request'
description: 'Run Resyntax on the repository and gather its suggestions into a pull request'
inputs:
  private-key:
    description: 'A private key for the Resyntax CI GitHub App.'
    required: true
  max-fixes:
    description: 'The maximum number of suggested fixes to apply.'
    required: false
    default: '20'
  max-modified-files:
    description: 'The maximum number of files to modify.'
    required: false
    default: '3'
runs:
  using: "composite"
  steps:
    - name: Install Resyntax
      run: raco pkg install --auto resyntax
      shell: bash
    - name: Generate a token
      id: generate-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: 999945
        private-key: ${{ inputs.private-key }}
    - name: Get GitHub App User ID
      id: get-user-id
      run: echo "user-id=$(gh api "/users/${{ steps.generate-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
      shell: bash
      env:
        GH_TOKEN: ${{ steps.generate-token.outputs.token }}
    - name: Checkout code
      uses: actions/checkout@v3.6.0
      # See https://github.com/actions/checkout/issues/118.
      with:
        fetch-depth: 0
    - name: Create a new branch
      run: git checkout -b autofix-${{ github.run_number }}-${{ github.run_attempt }}
      shell: bash
    - name: Run Resyntax
      run: |
        racket -l- resyntax/cli fix \
          --directory . \
          --max-fixes ${{ inputs.max-fixes }} \
          --max-modified-files ${{ inputs.max-modified-files }} \
          --output-as-commit-message \
          >> /tmp/resyntax-output.txt
      shell: bash
    - name: Create pull request
      uses: actions/github-script@v6.4.1
      with:
        github-token: ${{ steps.generate-token.outputs.token }}
        script: |
          const { readFile, writeFile } = require('fs/promises');
          const commitMessageBody = await readFile('/tmp/resyntax-output.txt', { encoding: 'utf8' });
          const commitMessageTitle = "Automated Resyntax fixes";
          const commitMessage = commitMessageTitle + "\n\n" + commitMessageBody;
          await writeFile('/tmp/resyntax-commit-message.txt', commitMessage);
          await exec.exec('git config user.name "${{ steps.generate-token.outputs.app-slug }}[bot]"');
          await exec.exec('git config user.email "${{ steps.get-user-id.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com"');
          await exec.exec('git commit --all --file=/tmp/resyntax-commit-message.txt');
          await exec.exec('git push --set-upstream origin autofix-${{ github.run_number }}-${{ github.run_attempt }}');
          await github.rest.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: commitMessageTitle,
            head: "autofix-${{ github.run_number }}-${{ github.run_attempt }}",
            base: "master",
            body: commitMessageBody,
            maintainer_can_modify: true,
          });
